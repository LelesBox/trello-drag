{"version":3,"sources":["webpack:///webpack/bootstrap d229854b3d8196031b1f","webpack:///./index.js","webpack:///./drag.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,gCAAgC,IAAI,gCAAgC,IAAI,gCAAgC;AACzH;;AAEA;AACA;AACA,kBAAiB,YAAY;AAC7B,iEAAgE,cAAc;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA,sBAAqB,oBAAoB;AACzC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA,iDAAgD,aAAa;AAC7D;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,+CAA8C,aAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,2BAA2B,MAAM,2BAA2B;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH,qCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d229854b3d8196031b1f\n **/","var drag = require('./drag')\n\nfunction $ (sel) {\n  return document.querySelectorAll(sel)\n}\n$('.container')[0].innerHTML = getChildrenHTML(3)\n$('.container')[1].innerHTML = getChildrenHTML(4)\n$('.container')[2].innerHTML = getChildrenHTML(5)\nvar d = drag($('.container'))\nwindow.add = function () {\n  $('.container')[1].appendChild(gelement())\n  d.update()\n}\nvar dd = drag($('.co'))\nfunction randomColor () {\n  return `rgba(${Math.round(Math.random() * 255)}, ${Math.round(Math.random() * 255)}, ${Math.round(Math.random() * 255)}, 1)`\n}\n\nfunction getChildrenHTML (number) {\n  var inthml = ''\n  for (var i = 0; i < number; i++) {\n    inthml += `<div class=\"drag\" drag style=\"background-color:${randomColor()}\"></div>`\n  }\n  return inthml\n}\n\nfunction gelement () {\n  var div = document.createElement('div')\n  div.className = 'drag'\n  div.setAttribute('drag', '')\n  div.style.backgroundColor = randomColor()\n  return div\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","/* **********utils*********** */\nfunction on (element, event, handler) {\n  if (element && event && handler) {\n    if (element.length === 0) return\n    if (element.length) {\n      for (var i = 0; i < element.length; i++) {\n        element[i].addEventListener(event, handler, false)\n      }\n    } else {\n      element.addEventListener(event, handler, false)\n    }\n  }\n}\n\nfunction addClass (elm, clazz) {\n  elm.classList.add(clazz)\n}\n\nfunction removeClass (elm, clazz) {\n  elm.classList.remove(clazz)\n}\n\nfunction copyElm (elm) {\n  var el = elm.cloneNode(true)\n  el.style.position = 'fixed'\n  var position = elm.getBoundingClientRect()\n  el.style.margin = '0px'\n  el.style.top = position.top + 'px'\n  el.style.left = position.left + 'px'\n  el.style.zIndex = 9999\n  return el\n}\n\nfunction exchange (arr, idx, idx2) {\n  var temp = arr[idx]\n  arr[idx] = arr[idx2]\n  arr[idx2] = temp\n}\n\nfunction findIndex (arr, target) {\n  var i = arr.length\n  while (i--) {\n    if (arr[i] === target) {\n      return i\n    }\n  }\n  return -1\n}\n// 成功则返回target\nfunction getOVerlayElm (source, target, threshold) {\n  var p1 = source.getBoundingClientRect()\n  var p2 = target.getBoundingClientRect()\n  var overlayWidth = (Math.min(p1.bottom, p2.bottom) - Math.max(p1.top, p2.top))\n  var overlayHeight = (Math.min(p1.right, p2.right) - Math.max(p1.left, p2.left))\n  if (overlayWidth > 0 && overlayHeight > 0) {\n    var overlay = overlayWidth * overlayHeight\n    var minarea = Math.min(p1.width * p1.height, p2.width * p2.height)\n    if (overlay / minarea > threshold) {\n      // 表示target元素被souce覆盖了！\n      return target\n    }\n  }\n  return null\n}\n\n/* **********core*********** */\nfunction applyDrag (container) {\n  var elms = []\n  if (container.length !== undefined) {\n    for (var i = 0, l = container.length; i < l; i++) {\n      var children = container[i].children\n      for (var j = 0, jlength = children.length; j < jlength; j++) {\n        if (children[j].getAttribute('drag') !== null) {\n          elms.push(children[j])\n        }\n      }\n    }\n  } else {\n    children = container.children\n    for (var k = 0, klength = children.length; k < klength; k++) {\n      if (children[k].getAttribute('drag') !== null) {\n        elms.push(children[j])\n      }\n    }\n  }\n  var length = elms.length\n  return function (elm, sourceElm, point) {\n    elm.style.transform = `translate3d(${point.moveX - point.startX}px, ${point.moveY - point.startY}px, 0) rotate(5deg)`\n    var a = elm.getBoundingClientRect()\n    var el\n    var i = length\n    var b\n    var targetIdx = findIndex(elms, sourceElm)\n    while (i--) {\n      el = elms[i]\n      if (el === sourceElm) {\n        continue\n      }\n        // 覆盖面积达到百分之七十的元素\n        // 1.如果该元素于sourceElm属于一个父容器，则\n        // 1.1 如果sourceElm粗线在el之前，则 insertBefore(sourceElm, el.nextSibling)\n        // 1.2 如果sourceElm粗线在el之后，则 insertBefore(sourceElm, el)\n        // 2. 如果el与sourceElm不属于同一个父容器\n        // 2.1 如果a.top > b.top 则 insertBefore(sourceElm, el.nextSibling)\n        // 2.2 如果 a.bottom < b.bottom 则 insertBefore(sourceElm, el)\n      if (el.parentNode === sourceElm.parentNode) {\n        if (getOVerlayElm(elm, el, 0.7)) {\n          if (targetIdx < i) {\n            el.parentNode.insertBefore(sourceElm, el.nextSibling)\n            exchange(elms, targetIdx, i)\n          } else if (targetIdx > i) {\n            el.parentNode.insertBefore(sourceElm, el)\n            exchange(elms, targetIdx, i)\n          }\n          break\n        }\n      } else {\n        if (getOVerlayElm(elm, el, 0.3)) {\n          b = el.getBoundingClientRect()\n          if (a.top > b.top) {\n            el.parentNode.insertBefore(sourceElm, el.nextSibling)\n            exchange(elms, targetIdx, i)\n          } else if (a.bottom < b.bottom) {\n            el.parentNode.insertBefore(sourceElm, el)\n            exchange(elms, targetIdx, i)\n          }\n          break\n        }\n      }\n    }\n  }\n}\n\n// 给每个容器打标签\nvar idx = 0\n// 存放各个容器下的updateView方法\nvar updateViews = {}\nvar _updateView = null\n// 拖动的元素，拖动的时候其实它是source创建出来的副本\nvar target = null\n// 选中的拖动元素\nvar source = null\nvar point = {\n  startX: 0,\n  startY: 0,\n  moveX: 0,\n  moveY: 0\n}\n// 监听全局鼠标按下事件\n// 如果该元素包含drag属性，则启用drag方法\non(document, 'mousedown', function (e) {\n  if (e.target.getAttribute('drag') !== null) {\n    point.startX = e.clientX\n    point.startY = e.clientY\n    var dragId = e.target.parentNode.getAttribute('drag-id')\n    if (dragId === undefined) return\n    _updateView = updateViews[dragId]\n    setTimeout(function () {\n      source = e.target\n      target = copyElm(source)\n      addClass(source, 'drag-mask')\n      document.body.appendChild(target)\n    })\n  }\n})\n\non(document, 'mousemove', function (e) {\n  if (target !== null) {\n    point.moveX = e.clientX\n    point.moveY = e.clientY\n    _updateView(target, source, point)\n  }\n})\n\non(document, 'mouseup', function () {\n  if (target) {\n    document.body.removeChild(target)\n    removeClass(source, 'drag-mask')\n    target = null\n  }\n})\n\n// 生成drag-mask样式\nvar style = document.createElement('style')\nstyle.innerHTML = `.drag-mask::after {\n  content: \"\";\n  position: absolute;\n  top:0;\n  left:0;\n  width: 100%;\n  height: 100%;\n  background-color: #c0c6ca;\n  user-select: none;\n  -webkit-user-select:none;\n  -moz-user-select: none;\n  z-index: 9999;\n  border-radius: 4px;\n}\n[drag] {\n  position: relative;\n}`\ndocument.getElementsByTagName('head')[0].appendChild(style)\n\nmodule.exports = function (elms) {\n  var index = idx++\n  if (elms.length === undefined) {\n    elms.setAttribute('drag-id', index)\n  } else {\n    for (var i = 0, l = elms.length; i < l; i++) {\n      elms[i].setAttribute('drag-id', index)\n    }\n  }\n  updateViews[index] = applyDrag(elms)\n  return {\n    update: function () {\n      updateViews[index] = applyDrag(elms)\n    }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./drag.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}